#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<malloc.h>
#define N  100

struct song
 {
    char  name[20]; 
    char  creater[20];
    char  singer[20];
    char  date[8]; 
}so[N];

void printf_one(int i)
{
	 printf("\n%s     %s     %s     %s\n ",so[i].name,so[i].creater,so[i].singer,so[i].date);
	 
}

input(int i)
{
    printf("\nname: ");
    scanf("%s",so[i].name);
    printf("\ncreater: ");
    scanf("%s",so[i].creater);
    printf("\nsinger: ");
    scanf("%s",so[i].singer);
    printf("\ndate: ");
    scanf("%s",so[i].date);
}


save(int n)
{
	FILE *fp;
	int i;
	if((fp=fopen("song.txt","w"))==NULL)
	{
		printf("\nCannot open file\n");
	    exit(1);
	}
	for(i=0;i<n;i++)
	{
		fprintf(fp,"%s %s %s %s\n",so[i].name,so[i].creater,so[i].singer,so[i].date);
	}
	     
	fclose(fp);
}


printf_back()  
{
	void browse();
	void menu();
	int w;
	printf("\n\n\tSuccessful.^-^\n\n");
	printf("What do you want to do?\n\n\t1).Browse all now\t2).Back:[ ]\b\b");
	scanf("%d",&w);
	if(w==1)browse();
	else menu();
}


enter()
{
	int i,n;
	printf("How  many songs (0-%d)?:",N-1);
	scanf("%d",&n);  
	printf("\n Enter data now\n\n");
	 for(i=0;i<n;i++)
	 {
		 printf("\n input %dth song record.\n",i+1);
	     input(i); 
	 }
	 if(i!=0) save(n); 
	 printf_back();  
}

int load()
{
	FILE *fp;
	int i;
	if((fp=fopen("song.txt","r"))==NULL)
	{
		printf("\nCannot open file\n");
	    return  0;
	 }
	 for(i=0;!feof(fp);i++)
	 {
	
		 fscanf(fp,"%s %s %s %s ",so[i].name,so[i].creater,so[i].singer,so[i].date);
	
	 }
	 fclose(fp);
	 return(i);
}


printf_face()
{
	printf("\nname creater singer date\n");
}


int delete_data(int j,int n)
{
    FILE *fp;
	int i;
	if((fp=fopen("song.txt","w"))==NULL)
	{
		printf("\nCannot open file\n");
	    exit(1);
	}
	for(i=0;i<n;i++)
	{
		if(i!=j)
		fprintf(fp,"%s %s %s %s\n",so[i].name,so[i].creater,so[i].singer,so[i].date);
	}
	     
	fclose(fp);
	 return 1;
}


void delet()
{
	struct song s;

	int i,n,k,w0=1,w1,w2=0;
	n=load();
	do
	 {
		 k=-1;
	     printf_face();  
	     for(i=0;i<n;i++)
		 { 
			 if((i!=0)&&i%10==0)
			 {
				 printf("\n\nRemember which needed delete.pass any key to contiune");
                 getchar();
                 puts("\n\n");
			 }
	         printf_one(i);  
		 }
           do
		 {
		     printf("\n\nEnter Name.that you want to delete!Name:");
             scanf("%s",&s.name);
             for(i=0;i<n;i++)
			 { 
			      if(strcmp(s.name,so[i].name)==0)
				  { 
				    k=i;
	                            s=so[i];
				    break;
				  }
			 }
	               if(k==-1)
                      {
                          printf("\n\nNO exit! Are you again?\n\n\t1).again  2).no and back! [ ]\b\b");
                          scanf("%d",&n);
                          if(n==1)delet();
                          else menu();
	              }
                   }
	      while(k==-1);
	      printf_face();
	      printf_one(k);

	      w1=delete_data(i,n);
	      if(w1==1)
	      {
			  printf("\nSuccessful ^-^.\n\n Are you again?\n\n\t1).again  2).no and back! [ ]\b\b");
	          scanf("%d",&w0);
	          w2=1;
	      }
	      else
	      {
			  w0=0;
	          if(w2==1)so[k]=s;
	      }
	     
	  }
	     while(w0==1);
	     menu();
}

 
void browse()
{
	int i,n;
	n=load();
	printf_face();
	for(i=0;i<n;i++)
	{
		if((i!=0)&&(i%10==0))
		{
			printf("\n\nPass any key to continue\n");
	        getchar();
	        puts("\n\n");
		}
	    printf_one(i);
	 }
	    printf("\tThere are %d record.\n",n);
	    printf("\nPass any key to back\n");
	    getchar();
	    menu();
}

     

fname()
{
	int  i,n;
        int k=-1;
	char name[20];
	printf("\n\n name :");
	scanf("%s",&name);
	 n=load();
	 for(i=0;i<n;i++)
	     if(strcmp(so[i].name,name)==0) 
               {
                  k=i;
                  printf_one(k);
                }      
          if(k==-1) 
            {
              printf("\nNot Found\n");     
	      printf("\n\nAre you again?\n\t1).again   2).no and back  [ ]\b\b");
              scanf("%d",&n);
              if(n==1)fname();
              else menu();
            }
}

fcreater()
{
	int  i,n;
        int k=-1;
	char creater[20];
	n=load();
	printf("\n\n creater:");
	scanf("%s",&creater);
	for(i=0;i<n;i++)
	   if(strcmp(so[i].creater,creater)==0) 
               { k=i;
                 printf_one(k);
               }
         if(k==-1) 
            {
              printf("\nNot Found\n");     
	      printf("\n\nAre you again?\n\t1).again   2).no and back  [ ]\b\b");
              scanf("%d",&n);
              if(n==1)fcreater();
              else menu();
            }
	
}

fsinger()
{
	int  i,n;
        int k=-1;
	char singer[20];
        n=load();
	printf("\n\n singer :");
	scanf("%s",&singer);
	for(i=0;i<n;i++)
	    if(strcmp(so[i].singer,singer)==0) 
                 { k=i;
                   printf_one(k);
                 }
                 if(k==-1) 
            {
              printf("\nNot Found\n");     
	      printf("\n\nAre you again?\n\t1).again   2).no and back  [ ]\b\b");
              scanf("%d",&n);
              if(n==1)fsinger();
              else menu();
            }
	 
}


fdate()
{
	int  i,n;
        int k=-1;
	char date[8];
	 n=load();
	 printf("\n\n date :");
	 scanf("%s",&date);
	 for(i=0;i<n;i++)
	   if(strcmp(so[i].date,date)==0)
                  { k=i;
                   printf_one(k);
                  }
                 if(k==-1) 
            {
              printf("\nNot Found\n");     
	      printf("\n\nAre you again?\n\t1).again   2).no and back  [ ]\b\b");
              scanf("%d",&n);
              if(n==1)fdate();
              else menu();
            }
}

fall()
{
	int  i,n;
        int k=-1;
        char name[20];
        char creater[20];
        char singer[20];
        char date[8];
	struct song  s;
	n=load();
	printf("\nname: ");
        scanf("%s",&s.name);
        printf("\ncreater: ");
        scanf("%s",&s.creater);
        printf("\nsinger: ");
        scanf("%s",&s.singer);
        printf("\ndate: ");
        scanf("%s",&s.date);
	 for(i=0;i<n;i++)
	      if((strcmp(so[i].name,s.name)==0)&&(strcmp(so[i].creater,s.creater)==0)&&(strcmp(so[i].singer,s.singer)==0)&&(strcmp(so[i].date,s.date)==0))
	         { k=i;
                   printf_one(k);
                  }
                 if(k==-1) 
            {
              printf("\nNot Found\n");     
	      printf("\n\nAre you again?\n\t1).again   2).no and back  [ ]\b\b");
              scanf("%d",&n);
              if(n==1)fall();
              else menu();
            }
}

search()
{
	int c,m=0;
	printf("\n\n search by =>\n\n 1).name  2).creater 3).singer  4).date  5).all 6).back");
	printf("Which you need?:[ ]\b\b");
	do
	{
	    scanf("%d",&c);
	     if(c>5||c<1)
	     {
			 printf("\nChoice error!Please again!");
             m=1;
	     }
	}while(m!=0);
    switch(c)
	{
	   case 1:fname();break;
	   case 2:fcreater();break;
	   case 3:fsinger();break;
	   case 4:fdate();break;
	   case 5:fall();break;
	}
     printf("\n\n Searching is over!");
	 printf_back();
}


fz(int i,int n)
{
	int  j;
	struct song s;
	for (j=i+1;j<n;j++)
	{
		if(strcmp(so[i].creater,so[j].creater)==0)
		{ 
			if(j==i+1)
			{
				i++;
	            fz (i,n);
			}
	        else 
			{
				s=so[i+1];
	            so[i+1]=so[j];
	            so[j]=s;
	        }
	     }
	   else
	   {
		   if(j==n-1)
		   { 
			   i++;
	           fz(i,n);
		   }
	    }
	 }
	  save(n);
}


devide()
{
	int  i=0,n;
	n=load();
	fz(i,n);
	printf("\n\n");
	browse();
}



void menu()
 {int k,w1;
 do
  {puts("\t\t*******************MENU**********************\n\n");
   puts("\t\t\t\t 1.enter");  
   puts("\t\t\t\t 2.delete");  
   puts("\t\t\t\t 3.browse"); 
   puts("\t\t\t\t 4.search"); 
   puts("\t\t\t\t 5.devide");
   puts("\t\t\t\t 6.exit");
   puts("\n\n\t\t*********************************************\n");
  printf("choice your number(1-6):[ ]\b\b");
 scanf("%d",&k);
 if(k<1||k>6)
  {w1=1;
     getchar();
  }
  else  w1=0;
 }while(w1==1);
	 switch(k)
	 {case 1:enter();break;
	  case 2:delet();break;
	  case 3:browse();break;
	  case 4:search();break;
	  case 5:devide();break;
	  case 6:exit(0);
	 }
}

main()
{
	system("cls");
	menu();
}